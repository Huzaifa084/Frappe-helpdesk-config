Complete Documentation: Setting Up Frappe Helpdesk from Scratch
Prerequisites
Docker and Docker Compose installed on your system
Git (optional, for version control)
Step 1: Create Project Directory

mkdir "c:\Users\dev env\Desktop\HelpDesk"
cd "c:\Users\dev env\Desktop\HelpDesk"

Step 2: Create docker-compose.yml
Create a file named docker-compose.yml with the following content:

services:
  mariadb:
    image: mariadb:10.8
    restart: always
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --skip-character-set-client-handshake
      - --skip-innodb-read-only-compressed # Temporary fix for MariaDB 10.6
    environment:
      MYSQL_ROOT_PASSWORD: 123
    volumes:
      - mariadb-data:/var/lib/mysql

  redis:
    image: redis:alpine
    restart: always

  frappe:
    image: frappe/bench:latest
    restart: always
    command: bash /workspace/init.sh
    depends_on:
      - redis
      - mariadb
    environment:
      - SHELL=/bin/bash
      - REDIS_CACHE=redis://redis:6379
      - REDIS_QUEUE=redis://redis:6379
      - REDIS_SOCKETIO=redis://redis:6379
    working_dir: /home/frappe
    volumes:
      - .:/workspace
    ports:
      - "8000:8000"
      - "9000:9000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mariadb-data:


Step 3: Create init.sh
Create a file named init.sh with the following content:

#!/bin/bash

if [ -d "/home/frappe/frappe-bench/apps/frappe" ]; then
    echo "Bench already exists, skipping init"
    cd frappe-bench
    bench start
else
    echo "Creating new bench..."
fi

bench init --skip-redis-config-generation frappe-bench --version version-15

cd frappe-bench

# Set up the config file with proper Redis URLs
cat <<EOT > sites/common_site_config.json
{
 "background_workers": 1,
 "db_host": "mariadb",
 "file_watcher_port": 6787,
 "frappe_user": "frappe",
 "gunicorn_workers": 33,
 "live_reload": true,
 "rebase_on_pull": false,
 "redis_cache": "redis://redis:6379",
 "redis_queue": "redis://redis:6379",
 "redis_socketio": "redis://redis:6379",
 "restart_supervisor_on_update": false,
 "restart_systemd_on_update": false,
 "serve_default_site": true,
 "shallow_clone": true,
 "socketio_port": 9000,
 "use_redis_auth": false,
 "webserver_port": 8000
}
EOT

# Remove redis, watch from Procfile
sed -i '/redis/d' ./Procfile
sed -i '/watch/d' ./Procfile

bench get-app helpdesk --branch main

bench new-site localhost \
--force \
--mariadb-root-password 123 \
--admin-password admin \
--no-mariadb-socket

bench --site localhost install-app helpdesk
bench --site localhost set-config developer_mode 1
bench --site localhost set-config mute_emails 1
bench --site localhost set-config server_script_enabled 1
bench --site localhost clear-cache
bench use localhost

bench start


Step 4: Make init.sh executable (optional, for Windows this is not necessary)
In Linux/Mac you would need to make the script executable with:

chmod +x init.sh

Step 5: Start the project

docker-compose up -d

This will:

Pull the required Docker images
Create containers for MariaDB, Redis, and Frappe
Initialize the Frappe bench
Install Frappe and Helpdesk applications
Create a new site named "localhost"
Configure the site with proper Redis URLs
Start the application
Step 6: Wait for initialization
The first startup will take some time as it needs to:

Download and initialize Frappe
Set up the MariaDB database
Install the Helpdesk application
Build assets
You can monitor the progress with:

docker-compose logs -f frappe

Step 7: Access the application
Once initialization is complete, access your Frappe Helpdesk application at:

http://localhost:8000
Login with the following credentials:

Username: Administrator
Password: admin
Troubleshooting
If assets are missing:

docker-compose exec frappe bash -c "cd /home/frappe/frappe-bench && bench build --app helpdesk"

To clear cache and rebuild:

docker-compose exec frappe bash -c "cd /home/frappe/frappe-bench && bench clear-cache && bench build"

To restart the bench server:

docker-compose exec frappe bash -c "cd /home/frappe/frappe-bench && bench restart"

If Redis connection issues occur:
Ensure Redis URLs are properly formatted in the configuration with the "redis://" prefix.

To check installed apps:

docker-compose exec frappe bash -c "cd /home/frappe/frappe-bench && bench --site localhost list-apps"

Project Customization
To modify site configuration:

docker-compose exec frappe bash -c "cd /home/frappe/frappe-bench && bench --site localhost set-config KEY VALUE"

To install additional apps:

docker-compose exec frappe bash -c "cd /home/frappe/frappe-bench && bench get-app APP_NAME && bench --site localhost install-app APP_NAME"

To backup your site:

docker-compose exec frappe bash -c "cd /home/frappe/frappe-bench && bench --site localhost backup"

This completes the setup documentation. Your Frappe Helpdesk is now ready to use with a proper development environment.